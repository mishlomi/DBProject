-- v
--add tha colums price & discountPrice to tha tables book & play
alter table book
add Price number ;

alter table book
add DiscountPrice number default 0;

alter table play
add Price number ;

alter table play
add DiscountPrice number default 0;

--------------------------------------------------------------------------
-- V
--conect mambership to  client and not to customer
drop table membership;

create table membership
(
  membershipID number not null,
  startDate date not null,
  EndDate date not null,
  membershipType varchar2(15) not null,
  clientid varchar(9) not null,
  primary key (membershipid, clientid),
  foreign key (clientid) references client(clientid)
);

-----------------------------------------------------------------------------------
-- create the table PlayOrders
CREATE TABLE PlayOrders 
(
    orderID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    playID NUMBER NOT NULL,
    availableCopies NUMBER,
    orderQuantity NUMBER ,
    FOREIGN KEY (playID) REFERENCES play(playID)
);

-------------------------------------------------------------------------------------------
create table PlayPurchase
(
    purchaseID INT NOT NULL,
    purchaseDate DATE NOT NULL,
    quantity NUMBER NOT NULL,
    copyId NUMERIC(8) NOT NULL,
    clientId VARCHAR(9) NOT NULL,
    librarianId VARCHAR(9) NOT NULL,
    PRIMARY KEY (purchaseID),
    FOREIGN KEY (copyId) REFERENCES playCopy(copyId),
    FOREIGN KEY (clientId) REFERENCES client(clientId),
    FOREIGN KEY (librarianId) REFERENCES librarian(librarianId)
);

------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------
--goal: לעדכן את הטבלה מכירות למכירות ספרים ולשנות אותה בהתאם!
 
--part 1: הוספת העמודה clientid במקום העמודה workerid ולהוסיף אותו כמפתח זר לטבלה client:   
--        add culomn clientid varchar(9) not null

--עידכון הטבלה מ purchase ל-> bookpurchase
alter table purchase
rename to bookpurchase;

--finding the name of the forent key customerID  --we get: SYS_C008444
select uc.constraint_name
from user_constraints uc
join user_cons_columns ucc
on uc.constraint_name = ucc.constraint_name
where uc.table_name = 'BOOKPURCHASE' and uc.constraint_type = 'R' and ucc.column_name = 'CUSTOMERID';

--delete the FK customerID
alter table bookpurchase
drop constraint SYS_C008444;

--שינוי שם העמודה
alter table bookpurchase 
rename column customerid to clientid;

--השתמשנו כאן בפרוצדורה המעדכנת את השדה CLIENTID בטבלה BOOKPURCHASE בערך תקין 

--change culomn CLIENTID from number to varchar(9):
-- (1)הוספת עמודה חדשה
ALTER TABLE bookpurchase
ADD new_clientid VARCHAR2(9);

-- (2)העתקת הערכים לתוך העמודה החדשה 
UPDATE bookpurchase
SET new_clientid = TO_CHAR(clientid);

-- (3)מחיקת העמודה הישנה
ALTER TABLE bookpurchase
DROP COLUMN clientid;

--(4)שינוי שם העמודה החדשה לשם העמודה הישנה
ALTER TABLE bookpurchase
RENAME COLUMN new_clientid TO clientid;

-- (5)הוספת המפתח הזר
ALTER TABLE bookpurchase
ADD CONSTRAINT fk_bookpurchase_client
FOREIGN KEY (clientid) REFERENCES client(clientid);

-- בדיקה שכל הערכים ב clientidהם מתוך clientid של client
SELECT DISTINCT librarianId
FROM bookpurchase
WHERE librarianId NOT IN (SELECT librarianId FROM librarian);

-- (6)client not null
ALTER TABLE bookpurchase
MODIFY clientid VARCHAR2(9) NOT NULL;
------------------------------------------------------------------------------------------------------------
--part 2: הוספת העמודה librarianId והגדרתו כמפתח זר

-- שלב 1: הוספת העמודה החדשה
ALTER TABLE bookpurchase 
ADD librarianId VARCHAR2(9);

-- שלב 2: עדכון העמודה החדשה עם נתונים מהעמודה הישנה
BEGIN
    update_bookpurchase_librarianid;
END;

-- שלב 3: מחיקת העמודה הישנה
ALTER TABLE bookpurchase DROP COLUMN WorkerId;

-- שלב 4: לעדכן את עמודה החדשה להיות NOT NULL
ALTER TABLE bookpurchase
MODIFY librarianId VARCHAR2(9) NOT NULL;

-- שלב 5: הוספת המפתח הזר
ALTER TABLE bookpurchase
ADD CONSTRAINT fk_bookpurchase_librarian
FOREIGN KEY (librarianId) REFERENCES librarian(librarianId);

----------------------------------------------------------------------------
-- הוספת העמודה BOOKID והגדרתו כמפתח זר

-- 1. הוספת העמודה לטבלת bookpurchase
ALTER TABLE bookpurchase
ADD (bookId NUMBER);

-- 2. הוספת מפתח זר שמפנה לטבלת book
ALTER TABLE bookpurchase
ADD CONSTRAINT fk_bookpurchase_book
FOREIGN KEY (bookId) REFERENCES book(bookId);

-- 3. עדכון העמודה החדשה עם נתונים  מטבלת book
BEGIN
    update_bookpurchase_librarianid;
END;
----------------------------------------------------------------------------          
--הוספת העמודה BOOKID והגדרתו כמפתח זר

-- 1. הוספת העמודה לטבלת bookpurchase
ALTER TABLE bookpurchase
ADD (copyId NUMBER);

--2.  עדכון העמודה החדשה עם נתונים מהעמודה הישנה
BEGIN
    update_bookpurchase_copyid;
END;

-- הוספת המפתח הזר החדש .3 
ALTER TABLE bookPurchase ADD CONSTRAINT bookPurchase_copyId_fk
FOREIGN KEY (copyId) REFERENCES bookCopy(copyId);
------------------------------------------------------------------------------

-- צורת הטבלה היא כך:
/*
create table BookPurchase
(
    purchaseID INT NOT NULL,
    purchaseDate DATE NOT NULL,
    quantity NUMBER NOT NULL,
    copyId NUMERIC(8) NOT NULL,
    clientId VARCHAR(9) NOT NULL,
    librarianId VARCHAR(9) NOT NULL,
    PRIMARY KEY (purchaseID),
    FOREIGN KEY (copyId) REFERENCES playCopy(copyId),
    FOREIGN KEY (clientId) REFERENCES client(clientId),
    FOREIGN KEY (librarianId) REFERENCES librarian(librarianId)
);*/

----------------------------------------------------------------------------
----------------------------------------------------------------------------

--מחיקת הטבלאות שלא רלוונטיות לאחר האינטגרציה

DROP TABLE worker;

DROP TABLE customer;

DROP TABLE BookCoppy1;

DROP TABLE Book1;

DROP TABLE Booksales;


